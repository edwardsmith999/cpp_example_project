# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
BASE_DIR = ./packd_gtest/
GTEST_DIR = ${BASE_DIR}
GMOCK_DIR = ${BASE_DIR}

# Where to find user code.
USER_DIR = ./

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR) -isystem $(GMOCK_DIR)

# Flags passed to the C++ compiler.
CXX = g++
CXXFLAGS += -g -Wall -std=c++11 -Wextra -pthread $(INCS)

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = example_test

# All Google Test headers.  Usually you shouldn't change this
GTEST_HEADERS = $(GTEST_DIR)/gtest/*.h 
GMOCK_HEADERS = $(GMOCK_DIR)/gmock/*.h $(GTEST_HEADERS)

# House-keeping build targets.
all : $(TESTS)

test: 
	./example_test

clean :
	rm -f $(TESTS) gtest.a gtest_main.a gmock.a gmock_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/*.cc $(GTEST_DIR)/*.h $(GTEST_HEADERS)
GMOCK_SRCS_ = $(GMOCK_DIR)/*.cc $(GMOCK_HEADERS)


# For simplicity and to avoid depending on implementation details of
# Google Mock and Google Test, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Mock and
# Google Test compile fast and for ordinary users their source rarely
# changes.
gmock-gtest-all.o : $(GMOCK_SRCS_) $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GMOCK_DIR)/gmock-gtest-all.cc

gmock_main.o : $(GMOCK_SRCS_) gmock-gtest-all.o
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GMOCK_DIR)/gmock_main.cc

gmock.a : gmock-gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gmock_main.a : gmock_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.
example_test.o : $(USER_DIR)/example_test.cpp $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/example_test.cpp

example_test : example_test.o gmock_main.a gmock.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LIBS) -lpthread $^ -o $@


